{"ast":null,"code":"var _jsxFileName = \"/Users/annaagren/www/newbietech/components/Shapes.js\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport Matter from \"matter-js\";\nMatter.use(\"matter-wrap\");\nexport var Shapes = function Shapes(props) {\n  useEffect(function () {\n    var Engine = Matter.Engine,\n        Render = Matter.Render,\n        Bodies = Matter.Bodies,\n        World = Matter.World,\n        MouseConstraint = Matter.MouseConstraint,\n        Composites = Matter.Composites;\n    var sectionTag = document.querySelector(\"section.shapes\");\n    var w = window.innerWidth;\n    var h = window.innerHeight;\n    var engine = Engine.create();\n    var renderer = Render.create({\n      element: sectionTag,\n      engine: engine,\n      options: {\n        height: h,\n        width: w,\n        background: \"#f5e6e8\",\n        wireframes: false,\n        pixelRatio: window.devicePixelRatio\n      }\n    });\n\n    var createLogo = function createLogo(x, y) {\n      return Bodies.rectangle(x, y, {\n        render: {\n          sprite: {\n            texture: \"newbielogo.png\",\n            xScale: 25,\n            yScale: 25\n          }\n        }\n      });\n    };\n\n    var createShape = function createShape(x, y) {\n      return Bodies.rectangle(x, y, 20, 20, {\n        // frictionAir: 0.1,\n        render: {\n          // fillStyle: \"red\"\n          sprite: {\n            texture: \"../static/images/newbielogo.png\",\n            xScale: 25,\n            yScale: 25\n          }\n        },\n        plugin: {\n          wrap: {\n            min: {\n              x: 0,\n              y: 0\n            },\n            max: {\n              x: w,\n              y: h\n            }\n          }\n        }\n      });\n    }; // const bigBall = Bodies.circle(w / 2, h / 2, 200, {\n    //   isStatic: true,\n    //   render: {\n    //     fillStyle: \"#ffffff\"\n    //   }\n    // });\n\n\n    var wallOptions = {\n      isStatic: true,\n      render: {\n        visible: false\n      }\n    };\n    var ground = Bodies.rectangle(w / 2, h + 50, w + 100, 100, wallOptions);\n    var ceiling = Bodies.rectangle(w / 2, -50, w + 100, 100, wallOptions);\n    var leftWall = Bodies.rectangle(-50, h / 2, 100, h + 100, wallOptions);\n    var rightWall = Bodies.rectangle(w + 50, h / 2, 100, h + 100, wallOptions);\n    var mouseControl = MouseConstraint.create(engine, {\n      element: sectionTag,\n      constraint: {\n        render: {\n          visible: false\n        }\n      }\n    });\n    var initialShapes = Composites.stack(50, 50, 15, 3, 100, 150, function (x, y) {\n      return createShape(x, y);\n    });\n    World.add(engine.world, [ground, ceiling, leftWall, rightWall, mouseControl, initialShapes]);\n    document.addEventListener(\"click\", function (event) {\n      var shape = createShape(event.pageX, event.pageY);\n      World.add(engine.world, shape);\n    });\n    Engine.run(engine);\n    Render.run(renderer);\n    window.addEventListener(\"deviceorientation\", function (event) {\n      engine.world.gravity.x = event.gamma / 30;\n      engine.world.gravity.y = event.beta / 30;\n    });\n  });\n  return React.createElement(\"section\", {\n    className: \"shapes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/Users/annaagren/www/newbietech/components/Shapes.js"],"names":["useEffect","Matter","use","Shapes","props","Engine","Render","Bodies","World","MouseConstraint","Composites","sectionTag","document","querySelector","w","window","innerWidth","h","innerHeight","engine","create","renderer","element","options","height","width","background","wireframes","pixelRatio","devicePixelRatio","createLogo","x","y","rectangle","render","sprite","texture","xScale","yScale","createShape","plugin","wrap","min","max","wallOptions","isStatic","visible","ground","ceiling","leftWall","rightWall","mouseControl","constraint","initialShapes","stack","add","world","addEventListener","event","shape","pageX","pageY","run","gravity","gamma","beta"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport Matter from \"matter-js\";\n\nMatter.use(\"matter-wrap\");\n\nexport const Shapes = function(props) {\n  useEffect(() => {\n    const {\n      Engine,\n      Render,\n      Bodies,\n      World,\n      MouseConstraint,\n      Composites\n    } = Matter;\n\n    const sectionTag = document.querySelector(\"section.shapes\");\n\n    const w = window.innerWidth;\n    const h = window.innerHeight;\n\n    const engine = Engine.create();\n    const renderer = Render.create({\n      element: sectionTag,\n      engine: engine,\n      options: {\n        height: h,\n        width: w,\n        background: \"#f5e6e8\",\n        wireframes: false,\n        pixelRatio: window.devicePixelRatio\n      }\n    });\n\n    const createLogo = (x, y) => {\n      return Bodies.rectangle(x, y, {\n        render: {\n          sprite: {\n            texture: \"newbielogo.png\",\n            xScale: 25,\n            yScale: 25\n          }\n        }\n      });\n    };\n\n    const createShape = (x, y) => {\n      return Bodies.rectangle(x, y, 20, 20, {\n        // frictionAir: 0.1,\n        render: {\n          // fillStyle: \"red\"\n          sprite: {\n            texture: \"../static/images/newbielogo.png\",\n            xScale: 25,\n            yScale: 25\n          }\n        },\n        plugin: {\n          wrap: {\n            min: { x: 0, y: 0 },\n            max: { x: w, y: h }\n          }\n        }\n      });\n    };\n\n    // const bigBall = Bodies.circle(w / 2, h / 2, 200, {\n    //   isStatic: true,\n    //   render: {\n    //     fillStyle: \"#ffffff\"\n    //   }\n    // });\n\n    const wallOptions = {\n      isStatic: true,\n      render: {\n        visible: false\n      }\n    };\n\n    const ground = Bodies.rectangle(w / 2, h + 50, w + 100, 100, wallOptions);\n    const ceiling = Bodies.rectangle(w / 2, -50, w + 100, 100, wallOptions);\n    const leftWall = Bodies.rectangle(-50, h / 2, 100, h + 100, wallOptions);\n    const rightWall = Bodies.rectangle(\n      w + 50,\n      h / 2,\n      100,\n      h + 100,\n      wallOptions\n    );\n\n    const mouseControl = MouseConstraint.create(engine, {\n      element: sectionTag,\n      constraint: {\n        render: {\n          visible: false\n        }\n      }\n    });\n\n    const initialShapes = Composites.stack(50, 50, 15, 3, 100, 150, (x, y) => {\n      return createShape(x, y);\n    });\n\n    World.add(engine.world, [\n      ground,\n      ceiling,\n      leftWall,\n      rightWall,\n      mouseControl,\n      initialShapes\n    ]);\n\n    document.addEventListener(\"click\", event => {\n      const shape = createShape(event.pageX, event.pageY);\n      World.add(engine.world, shape);\n    });\n\n    Engine.run(engine);\n    Render.run(renderer);\n\n    window.addEventListener(\"deviceorientation\", event => {\n      engine.world.gravity.x = event.gamma / 30;\n      engine.world.gravity.y = event.beta / 30;\n    });\n  });\n\n  return <section className=\"shapes\" />;\n};\n"]},"metadata":{},"sourceType":"module"}