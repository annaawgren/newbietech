{"version":3,"file":"static/webpack/static/development/pages/index.js.d68dfbe6f290d790120c.hot-update.js","sources":["webpack:///./components/Shapes.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport Matter from \"matter-js\";\n\nexport const Shapes = function(props) {\n  useEffect(() => {\n    const {\n      Engine,\n      Render,\n      Bodies,\n      World,\n      Mouse,\n      MouseConstraint,\n      CustomMouse\n      // Composites\n    } = Matter;\n\n    const sectionTag = document.querySelector(\"section.shapes\");\n\n    const w = window.innerWidth;\n    const h = window.innerHeight;\n\n    const engine = Engine.create();\n    const renderer = Render.create({\n      element: sectionTag,\n      engine: engine,\n      options: {\n        height: h,\n        width: w,\n        background: \"#f5e6e8\",\n        wireframes: false,\n        pixelRatio: window.devicePixelRatio\n      }\n    });\n\n    const createShape = (x, y) => {\n      return Bodies.rectangle(x, y, 20, 20, {\n        // frictionAir: 0.1,\n        render: {\n          // fillStyle: \"red\"\n          sprite: {\n            texture: \"../static/images/newbielogo.png\"\n          }\n        }\n      });\n    };\n\n    const newbieLogo = Bodies.rectangle(50, 50, 300, 189, {\n      render: {\n        sprite: {\n          texture: \"../static/images/newbielogo.png\"\n        }\n      }\n    });\n\n    const rectangle = Bodies.rectangle(250, 50, 300, 80, {\n      render: {\n        fillStyle: \"#69E0C2\"\n      }\n    });\n    const circle = Bodies.circle(150, 250, 100, {\n      render: {\n        fillStyle: \"#FF5167\"\n      }\n    });\n\n    const wallOptions = {\n      isStatic: true,\n      render: {\n        visible: false\n      }\n    };\n\n    const ground = Bodies.rectangle(w / 2, h + 50, w + 100, 100, wallOptions);\n    const ceiling = Bodies.rectangle(w / 2, -50, w + 100, 100, wallOptions);\n    const leftWall = Bodies.rectangle(-50, h / 2, 100, h + 100, wallOptions);\n    const rightWall = Bodies.rectangle(\n      w + 50,\n      h / 2,\n      100,\n      h + 100,\n      wallOptions\n    );\n\n    const mouseControl = MouseConstraint.create(engine, {\n      mouse: customMouse.create(element),\n      element: sectionTag,\n      constraint: {\n        render: {\n          visible: false\n        }\n      }\n    });\n    console.log(mouseControl);\n\n    mouseControl.mouse.element.removeEventListener(\n      \"mousewheel\",\n      mouseControl.mouse.mousewheel\n    );\n    mouseControl.mouse.element.removeEventListener(\n      \"DOMMouseScroll\",\n      mouseControl.mouse.mousewheel\n    );\n\n    mouseControl.mouse.element.removeEventListener(\n      \"touchmove\",\n      mouseControl.mouse.mousemove\n    );\n    mouseControl.mouse.element.removeEventListener(\n      \"touchstart\",\n      mouseControl.mouse.mousedown\n    );\n    mouseControl.mouse.element.removeEventListener(\n      \"touchend\",\n      mouseControl.mouse.mouseup\n    );\n\n    mouse.mousedown = event => {\n      const position = Mouse._getRelativeMousePosition(\n          event,\n          mouse.element,\n          mouse.pixelRatio\n        ),\n        touches = event.changedTouches;\n\n      let isInBallXCoordinates =\n        position.x > Ball.bounds.min.x && position.x < Ball.bounds.max.x;\n      let isInBallYCoordinates =\n        position.y > Ball.bounds.min.y && position.y < Ball.bounds.max.y;\n      if (isInBallXCoordinates && isInBallYCoordinates) {\n        if (touches) {\n          mouse.button = 0;\n          event.preventDefault();\n        } else {\n          mouse.button = event.button;\n        }\n\n        mouse.absolute.x = position.x;\n        mouse.absolute.y = position.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n        mouse.mousedownPosition.x = mouse.position.x;\n        mouse.mousedownPosition.y = mouse.position.y;\n        mouse.sourceEvents.mousedown = event;\n      }\n    };\n\n    // const initialShapes = Composites.stack(50, 50, 15, 3, 100, 150, (x, y) => {\n    //   return createShape(x, y);\n    // });\n\n    World.add(engine.world, [\n      ground,\n      ceiling,\n      leftWall,\n      rightWall,\n      mouseControl,\n      // initialShapes,\n      rectangle,\n      circle,\n      newbieLogo\n    ]);\n\n    // document.addEventListener(\"click\", event => {\n    //   const shape = createShape(event.pageX, event.pageY);\n    //   World.add(engine.world, shape);\n    // });\n\n    Engine.run(engine);\n    Render.run(renderer);\n\n    window.addEventListener(\"deviceorientation\", event => {\n      engine.world.gravity.x = event.gamma / 30;\n      engine.world.gravity.y = event.beta / 30;\n    });\n  });\n\n  return <section className=\"shapes\" />;\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAHA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AADA;AAQA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAHA;AASA;AAEA;AAIA;AAKA;AAIA;AAIA;AACA;AAIA;AACA;AAAA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAOA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;A","sourceRoot":""}